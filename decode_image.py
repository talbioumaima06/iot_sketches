import base64
from PIL import Image
from io import BytesIO

def decode_and_display_image(encoded_string):
    # Decode the Base64 encoded string
    decoded_bytes = base64.b64decode(encoded_string)
    
    # Open the image using PIL
    img = Image.open(BytesIO(decoded_bytes))
    
    # Display the image
    img.show()

# Example usage:
# Provide the Base64 encoded string here
encoded_image = "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"

# Call the function with the encoded image string
decode_and_display_image(encoded_image)
